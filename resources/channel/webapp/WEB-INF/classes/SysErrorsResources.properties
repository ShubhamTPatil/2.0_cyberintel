#This file represents the error message that can occur from the GUI when an action is taken.  For example, when
#a page is submitted and an underlying system component is unable to perform its logic.  The error messages here
#DIFFER from the messages stored in InputErrorsResources.properties.  The error messages in
#InputErrorsResources.properties are those displayed for when data in a form is in an invalid format.
#
#Any error prefixed with 'internal' is a problem that CANNOT be addressed by the user and is something that should
#be reported to BMC Software. The internal error messages are ALWAYS logged in the web application logs (i.e.
#the channel directory. Additionally, the user is directed to a DIFFERENT page than the one they were on.
#NOTE!! The text that indicates that the problem should be reported to BMC Software is specified in
#ApplicationResources.properties.  Please see page.internalerror.InternalErrorMsg.  This means that
#The text for indicating it needs to be reported does NOT have to be in the internal error message itself.
#
#Any error prefixed with 'error' are problems that CAN be addressed by the user. By development, these are
#referred to as known errors. These errors do not
#need to be reported to BMC Software and should be sufficient to help the user with their problem.  These errors
#are generally NOT logged, unless the underlying business logic (i.e. the components that save subscriptions
#to LDAP) indicate to do so.  The user is redirected BACK to the SAME page on which the error occurred
#so that they can address the problem.

#---------------------------------------------------------------------

#Error constant used when the exception thrown is unknown and does not have a corresponding descriptive message.
#Examples include NullPointerException, IllegalArgumentExceptions.  These are problems that cannot be addressed
#by a user. Additionally, this internal error could possibly occur during any action so it must be generic in
#description.
internalerror.system.exception=An internal error occurred.  Information about this error: {0}.

#Error constant used if the error key for the exception is not defined in the SysErrorsResources file (this file).
#This could occur if a developer forgot to add an error key and message to this file for the defined error
#type.  This could possibly occur during ANY action (known or internal).
internalerror.system.noMsgInRSRC=No error message is defined for {0}.

#Error constant for when a developer has mistakenly passed in the wrong kind of argument to an internal method.
#This problem could possibly occur during any action.
internalerror.input.wrongArguments=The wrong arguments were passed to an internal method.  The internal method is {0} and the invalid argument is {1}

#Error constants for problems when accessing users and user groups for the source users from transmitter
#functionality.  Specifically, this can occur if an RPC connection cannot be made to the transmitter.  We
#know that the transmitter is contactable, however the transmitter does not give the RPC for connection.
#Developers: this occurs in com.marimba.apps.subscriptionmanager.SubscriptionMain
error.usetx.cannot.obtain.rpc=Unable to connect to the $(transmitter), {0}.  This connection is needed to obtain the list of users or user groups. Verify that a connection can be made to the port for the $(transmitter). Possible causes include a firewall preventing communication.


#Before a user can source users from transmitter, the must first publish the plugin.  This
#is because we need to be able to access the actual transmitter that is used for obtaining the
#user and user group list in the plugin.
error.usetx.no.plugin.url=Publish the Security Service plug-in from the Configuration page. The plug-in must first be published before users and user groups can be sourced from the $(transmitter) on which the plug-in runs.

#An invalid format was specified for the plugin publish URL.
error.usetx.invalid.plugin.url=Publish the Security Service plug-in from the Configuration page. A valid plug-in must first be published before users and user groups can be sourced from the $(transmitter) on which the plug-in runs.

#This error occurs if there is a problem with obtaining the RPC port from the plugin transmitter
#because of the fact that the host name cannot be resolved to and IP address. This can occur
#if the URL specified cannot be contacted.
error.usetx.unknownhost.rpc.port=The $(transmitter) on which the plug-in runs cannot be contacted. Make sure that the connection between the Secuity Manager machine and the plug-in $(transmitter) is up. Additionally, make sure that the machine on which the $(transmitter) is running can be pinged from the machine on which Secuity Manager is running.

#This error occurs when sourcing users and user groups from the plugin transmitter.  This can occur if the
#connection is lost while obtaining the RPC port for the transmitter.  The RPC port is needed to get an
#RPC connection to the endpoint.
error.lost.connection.rpc.tx=A connection to the $(transmitter) on which the plug-in is running cannot be established. This connection is needed to obtain a list of users and user groups.  Verify that the $(transmitter) is running and that the connection on the Secuity Manager machine is still up.


# Error constant used if the the plugin transmitter returns an invalid RPC port.  The RPC port
# is used for establishing a connection to list the users and the user groups.  Therefore,
# if a valid RPC connection cannot be obtained, then we cannot get the user and user group
# listings
error.usetx.invalid.rpc.port.int=The $(transmitter) on which the plug-in is running did not return a valid port for obtaining the list of users and user groups.  The value returned was {0}.  Make sure that the $(transmitter)&#039;s RPC port is configured to be an integer.

#When users and user groups are sourced from the transmitter, an attempt at an RPC connection is made.
#However, the RPC connection can fail if an SSL connection needs to be made AND the tuner on which
#SPM running does not have appropriate SSL certificate for CLIENT connections
error.usetx.connect.rpc.ssl=An SSL connection could not be made to the $(transmitter) where the plug-in is running, {0}.  This connection is needed to obtain the list of users or user groups.  Verify that the $(tuner) on which Secuity Manager runs contains appropriate the SSL certificates for establishing a connection to the $(transmitter) where the plug-in is running.


#When users and user groups are sourced from the plugin transmitter, it is possible that the transmitter
#is no longer available.  This could occur if the transmitter has been removed from the workspace.
#This error will result if this is thecase.
error.usetx.no.transmitter.inworkspace=The users and user groups cannot be listed from the $(transmitter) where the plug-in is running because the $(transmitter),{0}, no longer exists.  Verify that this $(transmitter) has not been removed.

#When users and user groups are sourced from the plugin transmitter, a connection is made to
#the plugin transmitter to obtainthe user and user group listing.  However, if the transmitter is
#version 4.0 or before, then the interface for accessing users and user groups did not exist.
error.usetx.old.transmitter=The users and user groups cannot be listed from the $(transmitter) where the plug-in is running because the request is not supported by the version of the $(transmitter). Only $(transmitters) version 4.0 and above can handle this request.


#When users and user groups are sourced from the transmitter, a username and password must be
#supplied.  This error results when the username and password supplied are not valid for authentication.
#when the TRANSMITTER is configured to do DIGEST md5 authentication via RPC.
error.usetx.auth.transaccess.failed.digest=The users and user groups cannot be listed because the user name and password supplied for logging into the $(transmitter) where the plug-in is running, {0}, is incorrect. If the $(transmitter) is set up with "Password only" protection for administrative access, make sure you specify "*" for the user name when using -txadminaccess.

#If the transmitter administrator has issues with negotiating the login for obtaining the remote
#object, this error will occur.  This can happen if the the LDAP configured in the transmitter administrator
#is not configured properly.
error.usetx.auth.txadmin.failed.digest=The users and user groups cannot be listed because authentication failed for the $(transmitter) where the plug-in is running.  This could happen if the directory service used for users and user groups in $(Transmitter) Administrator is not set up properly.  Ensure that these settings connect to a valid directory service.

#When users and user groups are sourced from the transmitter, a username and password must be
#supplied.  This error results when the username and password supplied are not valid for authentication.
#when the TRANSMITTER is configured to do simple authentication via RPC.
error.usetx.auth.transaccess.failed.simple=The users and user groups cannot be listed because the user name and password supplied for logging into the $(transmitter) where the plug-in is running, {0}, is incorrect. If the $(transmitter) is set up with "Password only" protection for administrative access, make sure to specify "*" for the user name when using -txadminaccess.


#If the transmitter administrator has issues with negotiating the login for obtaining the remote
#object, this error will occur.  This can happen if the the LDAP configured in the transmitter administrator
#is not configured properly.
error.usetx.auth.txadmin.failed.simple=The users and user groups cannot be listed because basic authentication failed for the $(transmitter) where the plug-in is running.  This could happen if the directory service used for users and user groups in $(Transmitter) Administrator is not set up properly.  Ensure that these settings connect to a valid directory service.


#When users and user groups are sourced from the transmitter, a username and password must be
#
#
error.usetx.cantsaveprops=Unable to save the login information for connecting to the $(transmitter) where the plug-in is running.

#When users and user groups are sourced from the transmitter, an attempt at an RPC connection is made.
#However, the URL specified for the connection is not in the correct format.  This situation should NOT
#occur because we have already done verification of the URL in previous sections of the code
internalerror.usetx.connect.rpc.malformedurl=The URL specified for connecting to the $(transmitter) where the plug-in is running is invalid.  A connection must be established to obtain the list of users and user groups.

#When users and user groups are sourced from the transmitter, an attempt at an RPC connection is made.
#However, an exception occurred during the rpc connection process.  This is to catch general purpose errors
#that we could not classify.
internalerror.usetx.connect.rpc.io=An RPC connection could not be made to the $(transmitter) where the plug-in is running.  This connection is needed to obtain the list of users and user groups. Error message: {0}.

#When users and user groups are sourced from the transmitter, a path to the remote object is given in order
#for the SPM tuner to authenticate properly.  If the path is wrong, then this error occurs.
internalerror.auth.transaccess.wrongpath.admin=An RPC connection could not be made to the $(transmitter) where the plug-in is running, {0}.  This is because the path used for logging in is invalid.  The path specified was {1}.


#When users are sourced from the transmitter, a request must be made to obtain the RPC port.  If the
#URL passed in for the request is invalid, then an error can occur.  However, this should be
#prevented by other verification mechanisms in the code
internalerror.usetx.invalid.rpc.url.request=The URL of the $(transmitter) where the plug-in is running, which used for listing the users and user groups is invalid.  The URL specified is {0}.


#When users are sourced from the transmitter, the username and password used for connecting to the
#plugin transmitter are loaded.  However, if these values fail to load while attempting a connection,
#than this error will result.
internalerror.usetx.txadminprops.noinit=The user name and password for connecting to the $(transmitter) where the plug-in is running to get the list of users and user groups cannot be loaded.

#When users are sourced from the transmitter, the username and password used for connecting to the
#plugin transmitter are loaded.  However, if the username is null, then a connection cannot be made.
#This error will result.
internalerror.usetx.nousername.connect=The user name for connecting to the $(transmitter) where the plug-in is running for the list of users and user groups is empty.  It could not be loaded.

#When users are sourced from the transmitter, the username and password used for connecting to the
#plugin transmitter are loaded.  However, if the username is null, then a connection cannot be made.
#This error will result.
internalerror.usetx.nopassword.connect=The password for connecting to the $(transmitter) where the plug-in is running for the list of users and user groups is empty.  It could not be loaded.

#Error constants for errors during the publish of the application from the GUI or the commandline
#This can occur from the COMMANDLINE if they attempt to do a publish and they have not specified a URL
#A url can be specified as a publish command line option.  If this option is not specified, THEN
#it will default to use the url specified when a GUI publish was performed.
#Developers: this occurs in com.marimba.apps.subscriptionmanager.SubscriptionMain
error.comp.publish.InvalidSubSvcURL=There is no Security Service URL to use for publishing. Include a Security Service URL as an argument to the -publish option.

#This occurs when there is a problem with invoking the publishing mechanism for the transmitter. Perhaps
#if the transmitter is offline OR if the username and password were wrong
#REMIND: this error needs to be broken up to be more descriptive.. Possibly by catching different exceptions
#Developers: see com.marimba.apps.subscriptionmanager.SubscriptionMain
error.comp.publish.FailedPublish=Unable to publish the plug-in. Possible causes include the $(transmitter) is offline, the port specified is incorrect, or the user name and password combination specified is incorrect.


#This occurs when the castanet publishing mechanism does not successfully complete the publish, but no
#exception was thrown in the code.  We make a distinction in the error message used from the previous error so that we
#can easliy distinguish the code path.
#REMIND: this error needs to be broken up to be more descriptive.. Possibly by catching different exceptions
#Developers: see com.marimba.apps.subscriptionmanager.SubscriptionMain
error.comp.publish.FailedPublishNoResult=The publish process did not successfully complete. Possible causes include the $(transmitter) is offline, the port specified is incorrect, or the user name and password combination specified is incorrect.

#Error constants for errors during the publish of the application from the GUI or the commandline
#This can occur from the COMMANDLINE if they attempt to do a publish and they have not previously
#published from the GUI.  The commandline publish functionality is dependent on the LDAP
#connection information for the PLUGIN to have been published before in the GUI
#Developers: this occurs in com.marimba.apps.subscriptionmanager.SubscriptionMain
error.comp.publish.NullLDAPHost=The host name of the directory service that the plug-in is connecting to must be specified. Use the Secuity Manager browser interface to provide this information and publish the plug-in.

#These are internal errors that can occur during a publish operation from the CommandLine or GUI
#During the publish operation, it is possible that the object used for publishing cannot be created
#If so, then this error constant is used.
#Developers: see com.marimba.apps.subscriptionmanager.SubscriptionMain
internalerror.comp.publish.CantCreatePub=The plug-in cannot be published because of an internal error.

#If the user has specified a URL which uses the https protocol, then Subscription Manager
#will attempt to make the publish operation occurs.  If the publisher cannot handle setting
#the secure connection, then this error occur.
#REMIND: is this really internal?
#Developers: see com.marimba.apps.subscriptionmanager.SubscriptionMain
internalerror.comp.publish.CantSetSecure=The plug-in cannot perform a secure publish for the specified URL, {0}.

#During the publish operation, a temporary properties file is created that is used for when
#publishing the plugin.  If this file cannot be saved, then this error occurs. Possibilities include
#disk out of space, or no permissions to save the file in the channel directory
error.comp.publish.CantSaveProps=The publish properties cannot be saved. Make sure that the disk on which Secuity Manager is installed is not full. You may also want to check if you have permissions to save files in the channel directory.

#error generated during creation of installation scripts..
error.comp.ldapscript.CantSaveUpdateScript=Failed to save the update script for directory service installation. Check that the user has write permissions to the directory, and the disk is not full.
error.comp.ldapscript.CantSaveADScript=Failed to save the installation script for Active Directory. Check that the user has write permissions to the directory, and the disk is not full.
error.comp.ldapscript.CantSaveIPlanetScript=Failed to save the installation script for Sun ONE Directory.  Check that the user has write permissions to the directory, and the disk is not full.

#error generated during the importing of machines for iPlanet
error.comp.importmachines.insertgroup=Error while importing machine {0} in group {1}.
error.comp.importmachines.insertmachine=Error while importing machine {0}.
error.comp.importmachines.inputfile=Failed to read the input file containing the machines to be imported.


#Error constants for when there are internal errors for the GUI utilities.  GUI utilities are a set of
#methods that many of the actions use. Additionally, this internal error could possibly occur during any action so
#it must be generic in description.
internalerror.guiutils.wrongArguments=The wrong arguments were passed to an internal method.  The internal method is {0} and the invalid argument is {1}.


#Error constant used when a session variable for the Secuity Manager user cannot be found.  The session
#variable is needed to even use the product because it is used for the directory authentication.
#Developers: see com.marimba.apps.subscriptionmanager.webapp.util
internalerror.guiutils.usernotfound=Login authentication cannot be retrieved so that a connection to the directory service can be made. Therefore, Secuity Manager cannot be used.

#Error constant used when a session variable that is needed for listing the results for a transmitter listing is
#not available.  If this session variable does not exist, then the results from the transmitter cannot be listed.
#This would occur on the package add page for the assignment.
#Developers: see com.marimba.apps.subscriptionmanager.webapp.actions.PackageAddAction
internalerror.package.add.txnotfound=$(Transmitter) channel listing results are not accessible.

#Error constant used when the parameter for which URL to add cannot be found. This occurs on the
#the package add page for the assignment.
#Developers: see com.marimba.apps.subscriptionmanager.webapp.actions.PackageAddAction
internalerror.package.add.pathnotfound=Channel URL cannot be found.  The package cannot be added.

#Error constant used when we cannot obtain the results on the currently deployed packages page.
#Developers: see com.marimba.apps.subscriptionmanager.webapp.actions.PackageAddDeployedAction
internalerror.package.adddep.resultnotfound=Search result for existing packages not found.

#Error constant used when the action is unable to obtain the chosen package.
#Developers: see com.marimba.apps.subscriptionmanager.webapp.actions.PackageRemoveAction
internalerror.package.remove.notfound=Cannot remove package {0} because the system is unable to determine which package was chosen to be deleted.

#Error constant used if the list of packages that had been added to the assignment cannot be found
#This would occur when the Edit Package button is chosen
#Developers: see com.marimba.apps.subscriptionmanager.webapp.actions.PackageEditAction
internalerror.package.pkgsnotfound=Selected package&#039;s session variable not found.

#Error constant used if the list of packages that had been added to the assignment cannot be found
#This would occur when the Edit Package button is chosen
#Developers: see com.marimba.apps.subscriptionmanager.webapp.actions.PackageRemoveAction
error.package.remove.exception=Cannot remove packages.
.
error.package.add.pkgexist=Package {0} already selected. Make sure you do not have any duplicate packages selected and try again.
error.package.add.pkg.target.patherror=Package {0} path and/or name clash with an existing package with the same path and name but differing in case.  The package cannot be added as LDAP by default is case insensitive and considers this a duplicate entry.
error.package.add.pkg.group.patherror=Package {0} in folder ({1}) path and/or name clash with an existing package with the same path and name but differing in case.  The group cannot be added as LDAP by default is case insensitive and considers this a duplicate entry.
error.package.add.splchar=Package {0} contains one or more special character which are not supported by Secuity Manager. A URL cannot contain the following special characters: *, =, and +.

#When logging errors, it is possible to label what action was being performed when the error occurred.  This
#is sometimes necessary if there are many reasons for why an exception may occur.  These are not error
#message displayed in the GUI, but rather used during logging.
#REMIND: currently only package add/remove/edit, and assignment uses the labels. Other pages need to as well in the future.
error.package.add.exception=Cannot add packages
error.package.edit.exception=Cannot edit packages
error.package.save.exception=Cannot save packages
error.dist.edit.exception=Cannot edit assignment
error.dist.save.exception=Cannot save assignment
error.dist.delete.exception=Cannot delete assignment
internalerror.tunerchprops.cancel.exception=Cannot cancel the $(tuner)/package properties
internalerror.tunerchprops.save.exception=Cannot save the $(tuner)/package properties
error.servicesched.save.exception=Cannot save the Security Service update schedule on the target due to: {0}
error.servicesched.load.exception=Cannot load the Security Service update schedule on the target due to: {0}
error.sched.save.exception=Cannot save the schedule due to: {1}

#Error constants that are used during the save process for an assignment
#At least one target must be added to an assignment.  This is the constant used when this is not the case
#Developers:see com.marimba.apps.subscriptionmanager.webapp.actions.DistAsgPreviewAction
error.dist.save.notargets=There are no targets in this policy. Make sure that at least one target is selected.

#Error constants that are used during the save process for an assignment
#At least one channel must be added to an assignment.  This is the constant used when this is not the case
#Developers:see com.marimba.apps.subscriptionmanager.webapp.actions.DistAsgPreviewAction
error.dist.save.nochannels=There are no packages in this policy. Make sure that at least one package is selected.

#Error constants that are used during the save process for an assignment
#A secondary schedule must be specified in the assignment page.  This is the constant used when this is not the case
#Developers:see com.marimba.apps.subscriptionmanager.webapp.actions.DistAsgPreviewAction
error.dist.save.nosecsched=This policy includes packages with secondary states. You must specify a secondary schedule for these packages: {0}

#Error constants that are used during the save process for an assignment
#A secondary schedule cannot  be specified in the assignment page if there is not secondary state.  This is the constant
#used when this is not the case
#Developers:see com.marimba.apps.subscriptionmanager.webapp.actions.DistAsgPreviewAction
error.dist.save.nosecstates=A secondary schedule has been specified for this policy, but no packages have been assigned a secondary state. You must specify a secondary state for at least one of the packages.

#Error constant that are used during conflict resolution on the assignment page
#If a new target has been added to the assignment, the any states or schedules that are differing must be specified.
#This is because with a new target we cannot "maintain a state" since none existed previously
#Developers:see com.marimba.apps.subscriptionmanager.webapp.actions.DistAsgSaveAction
error.dist.save.newtargetandincstates=A new target has been added; however, differing states still exist for the packages, {0}.  Specify a value for the states.
error.dist.save.newtargetandincscheds=A new target has been added; however, differing schedules still exist for the packages.  Specify a value for the schedules.

#Error constant that is used during a delete of a package on the target details page
#This handles the situation when there is a conflict for when two users try to delete the same thing at
#the same timeco
#Developers:see com.marimba.apps.subscriptionmanager.webapp.actions.DistDeleteSaveAction
#Developers:see com.marimba.apps.subscriptionmanager.webapp.actions.DistDeleteAction
error.dist.delete.nosub=Cannot perform delete because there is no direct assignment or properties for target {0}.  The policy may be saved in another child container, or it may have been deleted by another user before your delete action was performed.  If there were multiple targets selected for this action, no action was taken on any of the targets.

error.dist.delete.nopkg=Cannot perform delete because there is no packages selected for targets {0}.  If you have some packages assigned to the targets, click on the check boxes to select the packages that you want to delete.

# Error Messages for Copy Operation
error.copy.itemalreadyexists=The selected target already exists.
error.copy.fromitemalreadyexists=The source target and destination target cannot be same.
error.copy.noitemexists=Select at least one destination target for copying the policy.
error.copy.nopolicyexists=Cannot perform the copy operation because there is no directly assigned policy for the target {0}.
error.copy.package.save.exception=Cannot copy the packages

# Error Messages for Edit Target List
error.addtarget.itemalreadyexists=The selected target already exists.
error.addtarget.selectone=Select at least one target for adding.
error.addtarget.save.nosecsched=This policy includes packages with secondary states. You must specify a secondary schedule for packages assigned to these targets: <b> {0} </b>
error.addtarget.save.nosecstates=A secondary schedule has been specified for this policy, but no targets have been assigned a secondary state. You must specify a secondary state for at least one of the targets.
error.addtarget.nowritepermission=Logged in user doesn't have write permission on target: {0}
error.addtarget.aclError=An error occurred when looking up the access control list for the selected target.
error.addtarget.aclGeneralError=An error occurred when looking up the access control list for the selected target.

#Error constants used during the package properties save action
#Developers:see com.marimba.apps.subscriptionmanager.webapp.actions.ApplyChannelPropsAction
error.tunerchprops.nochannel=The package, {0}, has not been assigned to the target, or it may have been deleted while you were editing the package&#039;s properties.  Therefore, the properties can not be set.

#Error constant used for the transmitter permissions page for a target
#If the passwords do not match when creating a transmitter permission entry, then this error will be thrown
#Developers:see com.marimba.apps.subscriptionmanager.webapp.actions.TransLoginAction
error.translogin.pwdconfirm.failed=The passwords do not match. Make sure that you have confirmed the password correctly.

#Error constant used when there is a problem with obtaining the selected target on the
#target details page.  This can occur if there is no session variable
#Developers:see com.marimba.apps.subscriptionmanager.webapp.actions.ServiceSchedSaveAction
internalerror.servicesched.targetdetails.notargetfound=No target could be found for setting a Security Service schedule.

#Error constant used when adding and removing targets from the assignment page.
#Developers:see com.marimba.apps.subscriptionmanager.webapp.actions.AddRemoveAddAction
error.target.add.alreadyAdded=Unable to add the selected target because it already exists in the list of targets. Select a different target.
error.target.add.aclDeny=Unable to add the selected target because you do not have the necessary access permissions to do so.
error.target.add.aclError=An error occurred when looking up the access control list for the selected target.

# Error constants when validating content in assignment page
error.assign.priorityRangeExceeed=The prioirties must be in the interval 1 to 99998. Make sure all packages priorities are within this bound. If you don't want to assign the priority, leave the text box empty.
error.assign.unknownPriorityValue=Make sure all packages priorities are within the maximum priority limit(99998).
error.assign.propsPriorityRangeExceeed=The prioirties must be in the interval 1 to 99999. Make sure all packages priorities are within this bound. If you don't want to assign the priority, leave the text box empty.
error.assign.propsPriorityExist=The given priority {0} is already exist, used priorities are {1}. 

#Error constants generated by the underlying subscription framework when there is a problem.  These appear during
#The initialization of Secuity Manager
#Developers:see com.marimba.apps.subscriptionmanager.webapp.SubscriptionMain
error.ldap.connect.failed=Failed to connect to the directory service. Verify that the directory service is running and is accessible.
error.ldap.connect.ldapconfig.notfound=Directory service configuration not set up. Complete the installation and configuration steps described in the Security Management Administrator&#039;s Guide before using Secuity Manager.
error.ldap.connect.emergencyuser=You cannot log into Secuity Manager with the user name &quot;admin&quot; and the emergency password.  Log in as a user in the directory service. Complete the installation and configuration steps described in the Security Management Administrator&#039;s Guide before using Secuity Manager.
error.ldap.connect.resolveuserdn=Cannot resolve the user with only the UID or sAMAccountName: {0}.  Check that you have correctly specified the user attribute and user class in the Directory Service settings page, which can be found in System Settings under the Data Source tab.
error.ldap.connect.multipleuserdn=More than one user with the same UID or sAMAccountName: {0} is found.  Specify the full DN as the user name in the login prompt (or UPN format if you are using Active Directory).
internalerror.ldap.connect.ldapconfig=LDAP environment could not be initialized since the configuration properties passed are null.
internalerror.ldap.connect.invalidargs=Invalid value for the directory service connection argument domain : {0}
error.ldap.connect.gcsiteorroot=Unable to make a connection because the location of the forest root or the current site could not be obtained.
error.ldap.connect.updatecontainer=There is more than one copy of the "All Subscription" in your Subscriptions container.  Follow the instructions for merging them (as described in the Upgrade Guide) before using Secuity Manager.

internalerror.upgrade.config.ldaplocal=An internal error occurred while upgrading the Secuity Manager configuration. Report this problem to the software distributor.

error.system.init.fail=An error occurred during the initialization of Secuity Manager {0}


#Error constants produced anytime the system gets a schedule format that is not parseable. This can occur is
#the porption of the code that generates the schedule string produces a bad format.
#Developers:see com.marimba.apps.subscriptionmanager.webapp.actions.DistAsgSchedSaveAction
internalerror.sched.invalidformat=The following is an invalid schedule format: {0}
internalerror.sched.unknowntype=The following is an unknown schedule type: {0}
internalerror.sched.unknowncomponent=The following is an unknown component attribute for the schedule: {0}
internalerror.sched.unknownchannel=The following is an unknown channel: {0}

#Error constant for Edit Target List Common Schedule
internalerror.addtargetsched.unknownchannel=The following is an unknown channel: {0}
error.osm.accessrestricted=OS Migration policy is not allowed for single machine and user targets.
error.mdm.notenabled=Access restricted. If you want to access this page, first enable Mobile Device Management feature in System settings page and specify the related settings. Only user target can able to access this page.
error.mdm.typeaccessrestricted=Access restricted. Only user target can able to access this page.

#Error constant used when the query fails while doing paging from LDAP
#Developers: com.marimba.apps.subscriptionmanager.webapp.actions.LDAPBrowseEPAction
error.ldap.browse.ldaplocal=There was a problem related to listing a portion of the results : {0}.

#Error constant used during search from the ldap browsing.  This can occur if the user bookmarks
#a page for ldap navigation, and then tries to go back to it.
error.ldap.search.emptycontainer=The bookmark containing the current location to search is missing. Return to the Target View page and navigate to the desired LDAP location. Remember not to use the browser&#039;s bookmark feature or the Back button when using Secuity Manager.
# when they enter an empty search string
error.ldap.search.emptystring=The search string entered is empty.  Try again.

error.ldap.search.invaliddate=Please enter date in the given format.

#Error constant used when there is a problem with obtaining a bean which contains state
#information. For example, state information is usedfor tracking paging.
internalerror.system.state.null=Failed to set system state because it was null: {0}
error.system.checkInEp.failed=An error occurred while checking if the target was valid.
internalerror.gui.wrongArguments=The wrong arguments were passed to an internal method. The illegal argument {0} passed into {1} method in {2} class.


# Error constants that is supose stored in a common file in webapps, and copied
# over during the make process to be able to get resolved in WebAppController
# Due to lack of time, we are hand copying these properties that
# is used by the transmitter listing tag here for now.
error.txlist.nohost=Failed to get the package list for: '{0}' because of the invalid $(transmitter) URL format.
error.txlist.connect=Failed to connect to {0}. The $(transmitter) may not be running, or you might be trying to connect to a $(transmitter) requiring SSL, but you do not have the certificate installed on the $(tuner) that is trying to connect to the $(transmitter).
error.txlist.generic=Problem getting package listing from the $(transmitter) {0}. Check that the $(transmitter) you are trying to connect to is running.

page.internalerror.InternalErrorMsg=The application has produced a internal error. Report the problem to the software distributor.

page.internalerror.CriticalErrorMsg=The application has produced a critical error. If the problem persists, report this problem to your software distributor.

internalerror.system.uidnotfound=Cannot resolve the 'sAMAccountName' attribute for the user with DN {0}.
error.input.required=The {0} field is required.

#ACL Errors
error.acl.notsetup=Access Control is not set up in the system.  Set the Subscription Config property marimba.subscription.acl to \'true\' to turn on the access control and permissions feature.
error.acl.nosubperm=The administrator {0} has no policy {1} permission on target {2}.
error.acl.mgrerror=Error from the access control manager.
error.cli.invalidargs=Invalid command argument : {0}

error.acl.morethanoneitemsel=Only one item can be selected for the activity.
error.acl.noitemsel=No items were selected for the activity.
error.acl.itemalreadyexists=The selected item already exists.
error.acl.noperforaction=No permission exists to carry out this action.
error.acl.noactionspecified=At least one permission must be selected.
error.acl.ldapconfigmissing=Access control is not set up in the system. Follow the instructions in the Administrator's Guide to configure your directory service to use ACLs.
error.acl.ldapconnfailed=The access control connection to LDAP failed. Look at the log files for more information.
error.acl.initunknownerror=An error occurred during the initialization of access control. Look at the log files for more information.
error.acl.role.notprimary=Only a primary administrator is allowed to perform this operation.
error.acl.role.notadmin=Only a primary administrator or an administrator is allowed to perform this operation.
error.acl.inheritance.notdeleted=Unable to delete permissions because they are inherited.
error.acl.sometargetsdeleted=Some targets in the access control list does not exist in the directory service.


error.compliance.productnotconfigured=The policy compliance feature is only available if {0} is configured. Make sure {0} is correctly configured.
error.compliance.productnotinstalled=The policy compliance feature is only available if {0} is installed on the same machine as Secuity Manager. Make sure {0} is correctly installed and configured.
error.compliance.productnotrunning=The policy compliance feature is only available if {0} is running. Make sure {0} is correctly installed and running.
error.compliance.aclDenyRead=Unable to view information for the selected target because you do not have the necessary access permissions to do so.
error.compliance.tuneradminfailed=Error redirecting to $(Tuner) Administrator.
error.compliance.noquerycontext=Can not obtain connection to Query Manager.  Verify that Report Center is started, and that database is configured in Report Center.
error.compliance.noquerycontextwrite=Can not obtain connection to Query Manager.  Verify that Report Center is started, and that the logged on user has the necessary roles to create a query.
error.compliance.noquerycontextread=Can not obtain connection to Query Manager.  Verify that Report Center is started, and that the logged on user has the necessary roles to run a query.
error.compliance.querysavefailed=Error while saving query {0}
error.compliance.queryinvalidname=Invalid query name {0}.  Query name must not contain the \'/\' character.
error.compliance.general=Problem getting compliance. {0}
error.compliance.hostnotset=None of the hosts are designated to calculate compliance. Use the Compliance link on the Configuration tab to enable this Secuity Manager instance to calculate compliance.
error.compliance.tgresolutionfailed=Database error while retrieving the list of targets given a group.
error.compliance.refreshfailed=Compliance cache refresh operation failed.
error.compliance.purgefailed=Compliance cache failed to purge stale records!
error.compliance.unknownhost=Unable to get the host name in order to run the calculate compliance task.
error.compliance.getgroupfailed=Unable to get groups list from database.
error.compliance.gettargetpackagecompliancefailed=Failed to retrieve TargetPackageCompliance Object from the database.
error.dbconnect.failed=Failed to connect to Report Center to obtain a database locator string.
error.nocached.datafound= No cached data found for the currently selected target.

error.search.malformedpattern=Malformed pattern error. Enter a valid pattern.

error.patch.managernotconfigured=Can not obtain connection to Patch Manager. Verify that Patch Manager is configured and started.
error.patch.simulate=Problem running simulation of patch for machine {0} : {1}.
error.patch.getpatches=Problem obtaining patches for patch group {0} : {1}.
error.patch.createcontext=Problem connecting to Patch Manager using the credentials for user {0}.
error.patch.serviceurlnotconfigured=Can not obtain connection to Patch Service URL.  Verify that Patch Manager running and the plugin is published.
error.input.integer=The value for the field must be an integer.


error.push.preview.nosub=Cannot proceed with the immediate policy update request.  There is no directly assigned or inherited policies for the target {0}.
error.push.fromdetails.exception=Cannot proceed with the immediate policy update request.
error.push.fromdetails.notargets=Cannot proceed with the immediate policy update request.  No endpoints were found for the target.  Check if Report Center is up and running.
error.push.status.nodeployment=Cannot find status information.
error.push.status.deploymentmanager=Unable to communicate with Deployment Manager.  Verify that Deployment Manager is configured and started.  Secuity Manager needs to be restarted after Deployment Manager is up.
error.dist.save.invalidsecstates=Change primary state for all the packages to \"stage\" or \"advertise\", in order to set a secondary state.


### From here to end added 1/18 by cwj
#OracleDAO.java
UnableToGetChannelNameFromTargetPackageComplianceObj_A=Unable to get Channel name from TargetPackageCompliance object
ErrorGettingTargetDetails=Error getting targetDetails

#TestConnection.java
MissingTestDotDataDir=Missing test.dataDir

#FileUser.java
CantLoadObject--SubIsNotInLDAP=Can't load object. Subscription is not in LDAP
CantDeleteObject--PrefObjectNotInStorage=Can't delete object. Preference object not in storage

#DBUtils.java
UnableToReturnPoolObjectToConnectionPool=Unable to return pool Object to Connection Pool

#AbstractAction.java
CantSetNullSysStateDistributionBean=Can't set null system state: Distribution Bean

#ComplianceTargetViewAction.java
ReportCenter=Report Center

#LDAPBrowseOUAction.java
ExpandingTheContainer=expanding the container

#AbstractAction.java & LDAPBrowseOUAction.java
LDAPBean=LDAP Bean
PagingBean=Paging Bean

#LDAPPageAction.java
ExpandingTheEntryPoint=expanding the entry point

#PackageAddAction.java
OneOfTheObjectsIsNull_ALabel=One of the objects is null: o1 = {0} o2 = {1}
OneOfTheObjectsIsNotComparable_ALabel=One of the objects is not comparable: o1 = {0} o2 = {1}

#SaveUserTransLoginAction.java
HostNameAndPort=Host name and port

#GetTargetsFromPkgsTag.java
CouldntObtainConnectionWhenAttemptingtoGetTgtsFromPkgs=Could not obtain connection when attempting to GetTargetsFromPkgs
CantSetNullSystemState--LDAPBean=Can't set null system state: LDAP Bean
CantSetNullSystemState--PagingBean=Can't set null system state: Paging Bean

#GUIUtils.java
CantRemoveNullValueFromSession=Can't remove null value from session

#DMHelper.java
InvalidConfigValues=Invalid config values
FailedToGetRPCRoot=Failed to get RPC root
FailedToGetIDirInterfaceFromRPCRootObject=Failed to get IDirectory interface from RPC root object
DeploymentManagerHasNotStarted=Deployment Manager has not started
DeploymentManagerReturnedNullContext=Deployment Manager returned null context
WordSpace=\

#OracleDAO.java
Last.updated.time.unavailable.oracle=Last updated time unavailable

#SqlServerDAO.java
Last.updated.time.unavailable.sql=Last updated time unavailable

#ARSystem errors
error.ar.invalidchannelstate=The Channel state that you specified is not supported, supported states are INSTALL and DELETE.
error.ar.connectionerror=There was a problem with your AR connection.
error.ar.notaskid=Parameter taskid is not present
error.ar.targetchannel.notpresent=There are no targets or packages in the task. Make sure that atleast one relationship either target or package is added.
error.ar.targetchannel.notarget=There are no targets or packages in the task. Make sure that target and package relationship is present in the task.
error.ar.invalidpatchstate=The Channel state that you specified is not supported, supported state for Patch channel is INSTALL.
error.ar.noaclpermission=There were no acl write permission for the target.
error.ar.invalidtimeout=The Expiration time that you specified is invalid. Make sure that task has postive value for Expiration (Hours).
error.ar.invalidpercentage=The Compliance (Percentage) that you specified is invalid. Make sure that task has postive value for Compliance (Percentage).

#OS Migration Errors
errors.osm.service.url=OS Migration service URL
