cmdline.usage.header=Usage: Policy Manager.  All command-line options are case-sensitive.  Target DNs are not case-sensitive.  All commands (except -help) have to be preceded by login credentials (example: runchannel http://<transmitter>/SubscriptionManager -user <user name> -password <password> -tenant <tenantname> -list).  The user name can be in the following formats: full DN (example: cn=user1,cn=users,dc=company,dc=com); CN, UID, or sAMAccountName (example: user1, provided this is a unique user); or UPN (example: user1@yourcompany.com).

cmdline.usage.hdr2=Configuration

cmdline.usage.hdr1=Installation and Upgrade

cmdline.usage.hdr0=Authentication

cmdline.usage.hdr3=Policies

cmdline.usage.hdr5=LDAP Query Collection

cmdline.usage.clientcertpw.opt=-clientcertpw <password>

cmdline.usage.clientcertpw.descr=  Specifies the password for the client certificate used when publishing the Policy Service plug-in to the transmitter. You usually use it with the -publish option.

cmdline.upgrade.replicate=The Policy Manager and plug-in infrastructure running on a domain different from the domain that stores policies will not be usable until replication to that domain has occurred.  The replication delay is particularly visible across sites.  If necessary, you may force immediate replication through Active Directory.

cmdline.usage.olduser.opt=-D <dn> | <uid>

cmdline.usage.olduser.descr=  Deprecated. Use -user option instead. Specifies the bind distinguished name (user name) for the directory service; can be a UID.

cmdline.usage.newuser.opt=-user {<dn> | <cn> | <uid> | <sAMAccountName> | <upn>}

cmdline.usage.newuser.descr=  Specifies the name of the user logging in to use Policy Manager. Together with the password, the user name is used to authenticate users before executing Policy Manager commands. It is also used when connecting to the directory service. The user name can be in the following formats: full DN (example: cn=user1,cn=users,dc=company,dc=com); CN, UID, or sAMAccountName (example: user1, provided this is a unique user); or UPN (example: user1@yourcompany.com).

cmdline.usage.delete1.opt=-delete { <target_name>_<target_type>.sub }

cmdline.usage.delete1.descr=  Deletes policies with the specified names from the current namespace.

cmdline.usage.delete2.opt=-delete <target_name> <target_type>

cmdline.usage.delete2.descr0=  Deletes the policy specified by the target name and target type from the current namespace.

cmdline.usage.delete2.descr1=Target types: user, usergroup, machine, machinegroup, all. Note: Collection is not a valid argument in the command-line interface. Use the machinegroup target type to designate a collection.

cmdline.usage.delete3.opt=-delete -all

cmdline.usage.delete3.descr=  Deletes all policies from the current namespace.

cmdline.usage.delete4.opt=-delete -cascade

cmdline.usage.delete4.descr=  Deletes all policies from the directory service.

cmdline.usage.delete5.opt=-delete -dn <dn>

cmdline.usage.delete5.descr=  Deletes the policy specified by the target's distinguished name (DN). This command is useful when two or more groups have the same common name under different organizational units in the directory service (example: cn=salesgroup,ou=newyork,dc=mycompany,dc=com and cn=salesgroup,ou=sanfrancisco,dc=mycompany,dc=com).

cmdline.usage.import1.opt=-import <directory>

cmdline.usage.import1.descr=  Imports all policy files in the specified directory.

cmdline.usage.import2.opt=-import { <target_name>_<target_type>.sub }

cmdline.usage.import2.descr=  Imports the listed policy files.

cmdline.usage.export.opt=-export <directory>

cmdline.usage.export.descr=  Exports all policies as .sub files in the specified directory.

cmdline.usage.copypolicy.opt=-copypolicy -sourcetarget <source_target_fullDN> -desttarget <destination_target_fullDN>

cmdline.usage.copypolicy.descr=Copy policy from source target to destination target 

cmdline.usage.ldapservers.opt=-ldapservers <mapping_file>

cmdline.usage.ldapservers.descr=  Imports transmitter-to-directory service mappings from the specified file. These mappings are used to assign a list of directory services to each repeater. You must specify the full path and name of the mapping file. For the format used within the file, refer to the Policy Management Administrator's Guide.

cmdline.usage.list1.opt=-list -cascade

cmdline.usage.list1.descr=  Lists all policies present in the directory service.

cmdline.usage.list2.opt=-list

cmdline.usage.list2.descr=  Lists all policies for the current namespace.

cmdline.usage.list3.opt=-list { <target_name>_<target_type>.sub }

cmdline.usage.list3.descr=  Lists the policy files specified by the target name and target type from the current namespace.

cmdline.usage.list4.opt=-list <target_name> <target_type>

cmdline.usage.list4.descr=  Lists the policies specified by the target name and target type from the current namespace.

cmdline.usage.list5.opt=-list -dn <dn>

cmdline.usage.list5.descr=  Lists the policy specified by the target's distinguished name (DN) from the current namespace. This command is useful when two or more groups have the same common name under different organizational units in the directory service (example: cn=salesgroup,ou=newyork,dc=mycompany,dc=com and cn=salesgroup,ou=sanfrancisco,dc=mycompany,dc=com).

cmdline.usage.list6.opt=-list -channel <channel_URL>

cmdline.usage.list6.descr=  lists the subscription targets for which a channel/package is currently assigned.

cmdline.usage.machines.opt=-machines <machines_file>

cmdline.usage.machines.descr=  Imports the specified machines flat file into Sun ONE Directory. You must specify the full path and name of the machines flat file. For the format used within the file, refer to the Policy Management Administrator's Guide.

cmdline.usage.namespace.opt=-namespace <child_container>

cmdline.usage.namespace.descr=  Specifies the child container (previously called "namespace") to use for storing policies in the directory service.

cmdline.usage.publish.opt=-publish <PolicyService_URL>

cmdline.usage.publish.descr=  Publishes the Policy Service plug-in or policy to the specified URL (example: runchannel http://<transmitter>/SubscriptionService).

cmdline.usage.publishpw.opt=-publishpw [user_name] <password>

cmdline.usage.publishpw.descr=  Specifies the user name and password (if necessary) required for publishing the Policy Service plug-in to a transmitter. It is usually used with the -publish option. The -publishpw command is ignored if access control is not enabled on the transmitter.

cmdline.usage.setpluginparam.opt=-setpluginparam [-pbinddn <bind_dn>] [-bindpasswd <password>] [-pbasedn <base_dn>] [-poolsize <pool_size>] [-usessl true/false] [-authmethod simple/kerberos] [-phost {<host>:<port>}] [-expirytime <expiry_time_last_successful_host_minutes>]

cmdline.usage.setpluginparam.descr=  Sets parameters used by the Policy Service plug-in to connect to the directory service. You must specify the -publish <PolicyService_URL> command along with -setpluginparam command to publish the Policy Service plug-in with the new parameters.

cmdline.usage.subscrib1.opt0=-subscribe [-modify] {<target_name> <target_type> | -dn <distinguished_name>}

cmdline.usage.subscrib1.opt1=    {<package_url>=<package_state1>,[package_state2],[package_priority_number],[exempt_from_blackout]}

cmdline.usage.subscrib1.opt2=    [-schedblackout <days_range>@<time_range>]

cmdline.usage.subscrib1.opt2.desc=Example : sun+mon+tue+wed+thu+fri+sat@9:00AM-5:00PM

cmdline.usage.subscrib1.opt3=    [-schedprimary {<package_url>=<date_time_range>}]

cmdline.usage.subscrib1.opt4=    [-schedsecondary {<package_url>=<date_time_range>}]

cmdline.usage.subscrib1.opt5=    [-schedupdate {<package_url>=<date_time_range_frequency>}]

cmdline.usage.subscrib1.opt6=    [-schedverifyrepair {<package_url>=<date_time_range_frequency>}]

cmdline.usage.subscrib1.descr=  Sets the policy for a target, assigning it one or more packages with the associated information, such as package states, schedules, and blackout exemption. If a policy already exists for a target, use the -modify option to append your changes instead of overwriting the existing policy.\n  Target types: user, usergroup, machine, machinegroup, all\n  Package states: install, stage, install-start-persist, install-persist, uninstall, advertise, install-start, primary, exclude, none\n  Blackout exemption options: true, false

cmdline.usage.changeorder.opt0=-changeorder {<target_name> <target_type> | -dn <distinguished_name>}

cmdline.usage.changeorder.opt1=  {<package_url>=[package_priority_number]}

cmdline.usage.changeorder.descr= Changes the priority number of one or more packages in the policy.

cmdline.usage.patchsubscribe.opt0=-patchsubscribe {<target_name> <target_type> | -dn <distinguished_name>}

cmdline.usage.patchsubscribe.opt1=    [-modify]

cmdline.usage.patchsubscribe.opt2=    {<patchgroup_URL>=<assignment_state>,[<exempt_from_blackout>]}

cmdline.usage.patchsubscribe.opt3=    [-schedpatch <date_time_range_frequency>]

cmdline.usage.patchsubscribe.opt4=    [-noautoreboot|-autoreboot [noalert|countdown=<countdown_minutes>,[postpone=<postpone_minutes>]]]

cmdline.usage.patchsubscribe.descr=  Subscribes a target to a patch group with the associated information, such as assignment states, schedules, and blackout exemption. If a policy already exists for a target, use the -modify option to append your changes instead of overwriting the existing policy.\n    Target types: user, usergroup, machine, machinegroup, all\n    Package states: assign, exclude\n    Blackout exemption options: true, false

cmdline.usage.tuner1.opt=-tuner {<target_name> <target_type> | -dn <distinguished_name>} { <property_name>[,<property_type>]=<property_value> }

cmdline.usage.tuner1.descr0=  Sets tuner or package properties for the specified target (by name and type or by distinguished name).

cmdline.usage.tuner1.descr1=  Property types: * (all packages), subscribers (all subscribed packages), <package_url> (a specific package), service (Policy Service channel). Omit <property_type> for tuner properties.

cmdline.usage.txadminaccess.opt=-txadminaccess <user_name> <password>

cmdline.usage.txadminaccess.descr0=  Specifies the user name and password for transmitters with restricted access. The user name and password is used to authenticate against the transmitter. For example, if Policy Manager sources users and user groups from the transmitter, the user name and password are used when obtaining the user and user group lists from the transmitter. If you want to set the password to blank (no password), use quotation marks with nothing enclosed ("").

cmdline.usage.oldpassword.opt=-w <password>

cmdline.usage.oldpassword.descr=  Deprecated.  Use -password.  Specifies the bind password for the directory service.

cmdline.usage.newpassword.opt=-password <password>

cmdline.usage.newpassword.descr=  Specifies the password of the user logging in to use Policy Manager. Together with the user name, the password is used to authenticate users before executing Policy Manager commands. It is also used when connecting to the directory service.

cmdline.usage.config.opt=-configSet <key> <value> [-preview]

cmdline.usage.config.descr0=  Sets the specified Subscription Config property. You need to specify the key name and value for the attribute in the Subscription Config object that you want to change. -preview allows you to view the new and old values for the attribute before you make the change. For example, "-configSet marimba.subscription.acl true" turns on the ACLs feature in Policy Manager.

cmdline.usage.complianceenabled.opt=-complianceenabled [true | false]

cmdline.usage.complianceenabled.descr= Enable the collection of compliance data

cmdline.unknownarg=Unknown argument:

cmdline.filenotfound=File not found:

cmdline.done=Policy Manager succeeded!

cmdline.ldapconnect.connected=Logged in Policy Manager as user :

cmdline.ldapconnect.ignoreparams=Directory service parameters -D,-w,-h,-p,-basedn,-Z,-auth,-usedn will be ignored.  -user has replaced -D, -password has replaced -w.

cmdline.ldapconnect.usingguiparams=Using directory service connection parameters last set in the browser-based interface

cmdline.ldapconnect.server=Server:

cmdline.ldapconnect.username=User name:

cmdline.ldapconnect.basedn=Base DN:

cmdline.ldapconnect.usessl=Use SSL:

cmdline.ldapconnect.usedn=Use DN for user name:

cmdline.ldapconnect.notconnected=ERROR: Not connected to the directory service

cmdline.ldapconnect.noserverfound=ERROR: No server name is specified.

cmdline.publishfailed=ERROR: Publish operation failed

cmdline.publish.couldnotconnect=WARNING: Could not connect to following hosts :

cmdline.publish.noldaphost=ERROR: Publish failed , no directory service host specified for the plug-in

cmdline.publishsucceeded=Published configuration

cmdline.importedmachines=Imported machines file:

cmdline.failedimportmachines=Failed to import machines file:

cmdline.importedldapservers=Imported transmitter-to-directory service mapping file:

cmdline.subscribeurlcantbenull=Channel URL cannot be null

cmdline.subscribeurlinvalid=ERROR: Invalid Channel URL

cmdline.subscribeinvstate=ERROR: Invalid state:

cmdline.subscribeinvsecstate=ERROR: Invalid secondary state:

cmdline.subscribeinvorder=ERROR: Invalid order: Order can only be a number from 1 to 99999 :

cmdline.changeorder.rangeexceeded=ERROR: Maximum priority limit exceeded (99998). Make sure all packages priorities are within this bound.

cmdline.changeorder.duplicatepackage=ERROR: Package is duplicated. Make sure you do not have any duplicate packages and try again. The package is : 

cmdline.subscribeinvexempt=ERROR: Invalid Exempt from blackout: Can be only be true|false :

cmdline.subscribeinvcharintarget=ERROR: Invalid character in the target name

cmdline.subscribeinvcontenttype=ERROR: Invalid content type:

cmdline.invalidprimarystate=ERROR: Invalid primary state

cmdline.invalidsecondarystate=ERROR: Invalid secondary state

cmdline.subscribeinvdir=ERROR: Invalid export directory:

cmdline.export.removed=-export command-line option is not available anymore.

cmdline.subscribeexported=Exported policies

cmdline.nothingtoexport=There are no policies in the current namespace

cmdline.cannotcreateexpfile=Could not create the export file :

cmdline.errorexportsub=Error while writing the .sub files

cmdline.subscribeimportfiles=Importing file:

cmdline.subscribeimportfnf=Import file not found:

cmdline.failedimportsub=Failed to import .sub file:

cmdline.noimportforcontainers=Could not import external, domain and unsupported objects.

cmdline.subscribedelete=Deleting policies for target:

cmdline.subscribedeletebyname=Deleting policies:

cmdline.subscribedeletebynameskip=Skipped deleting policies:

cmdline.subscribelistbynameskip=Skipped listing policies:

cmdline.tunerpropdeleted=Deleted tuner property

cmdline.Invalidtunerprop=Invalid Tuner property:

cmdline.tunerpropnotexists=Tuner property doesn't exists

cmdline.removedchannel=Removed channel

cmdline.channelnotexits=Channel doesn't exists

cmdline.delete=Delete operation successful

cmdline.deletefailed=Delete operation failed

cmdline.copypolicy=Copy operation successful

cmdline.copypolicyfailed=Copy operation failed

cmdline.complainceinputinvalid=Invalid parameter value for -complianceenabled command

cmdline.compliancesettingsfailed=Failed to apply compliance settings

cmdline.savecompliancesettingsfailed=Failed to save compliance settings for all endpoint target

cmdline.compliancesettingssuccess=Compliance setting is applied successfully

cmdline.delete.namespace=Deleting namespace:

cmdline.subscribesaved=Policy saved for:

cmdline.changeordersaved=Channel priority order rearranged and saved for:

cmdline.changeorderchannelsnotpresent=ERROR:  One or more of the given channels is/are not present in the policy of the given target.

cmdline.subscribesavefailed=Failed to save policy for:

cmdline.changeorderfailed=Failed to change the channel priority order for:

cmdline.invalidtypeorurl=Either the property type is invalid or the channel URL does not exist

cmdline.tunerpropsaved=Tuner properties saved for:

cmdline.tunerpropfailed=Failed to save tuner properties saved for:

cmdline.subscribeemptyprop=WARNING: Empty property for key:

cmdline.publishurl=Policy Manager's publish URL is

cmdline.mode.directoryenabled=Policy Manager is running in directory enabled mode.

cmdline.mode.standalone=Policy Manager is running in standalone mode.

cmdline.mode.setdirectoryenabled=Policy Manager is set to directory enabled mode.

cmdline.mode.invalid=Specified mode for running Policy Manager is invalid. The mode can be directoryenabled or standalone.

cmdline.mode.removed=-mode command-line option is not available anymore.

cmdline.mode.setstandalone=Policy Manager is set to standalone mode.

cmdline.target=Target:

cmdline.targetdn=Target DN:

cmdline.type=Type:

cmdline.lastmodified=Last Modified:

cmdline.error=ERROR:

cmdline.listfailed=Failed to list policies

cmdline.listingsubscriptions=Listing policies...

cmdline.list.channels=Channels:

cmdline.list.properties=Tuner/channel properties:

cmdline.list.namespace=Listing namespace:

cmdline.list.nopolicy=No target is assigned with package

cmdline.list.policies=Following targets assigned with package

cmdline.noimportforactivedir=Importing of machines is not allowed in Active Directory-based policy management.

cmdline.noorderforstandalone=Channel ordering is not supported in standalone mode.

cmdline.installscript.nooutputfile=Output file name must be specified

cmdline.installscript.noschemaoutputfile=Schema output file name must specified

cmdline.installscript.invdirtype=Invalid directory service type. Can be activedirectory, adam, or iplanetdirectory

cmdline.installscript.nouserid=User ID must be specified

cmdline.installscript.nofirstname=First name must be specified

cmdline.installscript.nolastname=Last name must be specified

cmdline.installscript.invusersource=Invalid user source: Can be transmitter or ldap

cmdline.installscript.nobasedn=Base DN must be specified

cmdline.installscript.setschemabase=Setting schema base DN to

cmdline.installscript.failedtosavefile=Failure to generate installation script

cmdline.installscript.invoption=Invalid command-line argument for -installscript:

cmdline.installscript.dupoption=Duplicate command-line argument for -installscript:

cmdline.installscript.noschemabasedn=Empty schema base DN is not allowed

cmdline.installscript.noschemafile=Schema output file name is not specified

cmdline.updatescript.noschemabasedn=Empty schema base DN is not allowed

cmdline.updatescript.noschemafile=Schema output file name is not specified

cmdline.updatescript.setschemabase=Setting schema base DN to

cmdline.updatescript.failedtosavefile=Failed to generate update script

cmdline.updatescript.invoption=Invalid command-line argument for -updatescript:

cmdline.updatescript.dupoption=Duplicate command-line argument for -updatescript:

cmdline.ldapserversfilenotfound=File not found:

cmdline.ldapserverserrorread=Error while reading file:

cmdline.ldapserverserrorwrite=Error while copying directory service mapping file

cmdline.ldapserversinvalidtxname=Invalid transmitter name format(host:[port]) on line number

cmdline.ldapserversinvalidserver=Invalid directory service format(host:[port]) on line number

cmdline.ldapserversinvaliddomain=Invalid Active Directory DNS domain format

cmdline.ldapserversinvalidusessl=Invalid SSL option (allowed valued are {true|false}) on line number

cmdline.ldapserversinvalidauthmethod=Invalid authentication method (allowed valued are {simple|kerberos}) on line number

cmdline.ldapserversinvalidpoolsize=Invalid poolsize. Valid value should be a number between 1 and 100

cmdline.ldapserversinvalidkey=Invalid key on line number

cmdline.ldapserversduplicatekey=Duplicate key on line number

cmdline.ldapserversmissingbasedn=Base DN not specified in the directory service mapping for transmitter,

cmdline.ldapserversmissingbinddn=A bind DN was not specified in the directory service mapping along with the password,

cmdline.ldapserversmissingpassword=A password was not specified along with the base DN,

cmdline.ldapserversmissingserveranddomain=Directory service or domain (if using Active Directory without auto-discovery) was not specified in the directory service mapping for transmitter

cmdline.ldapserversduplicateserverandomain=Only server or domain field can be specified for a transmitter mapping

cmdline.overwritesubscription=Overwriting policy in the directory service:

cmdline.createssubscription=Creating policy in the directory service:

cmdline.modifiessubscription=Modifying policy in the directory service:

cmdline.secondarystatenotfound=ERROR: Secondary schedule is present without secondary state.

cmdline.subscribechannelnotinpolicy=ERROR: Channel not in policy:

cmdline.subscribeinvblackoutscheduletime=ERROR: Invalid time interval for blackout schedule:

cmdline.subscribeinvblackoutscheduleday=ERROR: Invalid day for blackout schedule:

cmdline.subscribeinvschedule=ERROR: Invalid schedule string:

cmdline.subscribeinvprimaryschedule=ERROR: Invalid primary schedule:

cmdline.subscribeinvsecondaryschedule=ERROR: Invalid secondary schedule:

cmdline.subscribeinvprimarystate=ERROR: Invalid primary state:

cmdline.subscribeinvsecondarystate=ERROR: Invalid secondary state:

cmdline.list.blackoutsched=Blackout schedule:

cmdline.list.serviceexemptblackout=Service is exempted from blackout:

cmdline.list.channeltitle=    Title:

cmdline.list.channelurl=    URL:

cmdline.list.channelstate=    Channel state:

cmdline.list.channelsecstate=    Channel secondary state:

cmdline.list.primarysched=    Channel Primary schedule:

cmdline.list.secondarysched=    Channel Secondary schedule:

cmdline.list.updatesched=    Channel Update schedule:

cmdline.list.verrepairsched=    Channel Verify/Repair schedule:

cmdline.list.priority=    Channel priority:

cmdline.list.exemptFromBlackout=    Exempt From Blackout:

cmdline.subscribesecerror=Channels with a secondary state must have a secondary schedule

cmdline.subscribeendafterstart=Error: The ative End date must be after the active start date.

cmdline.subscribeprimschedfirst=The start date for the secondary schedule must be before the start date of the primary schedule.

cmdline.subscribeactivemust=Primary and secondary schedules must have an active time range in the format: dd/mm/yyyy@hh:mm[AM/PM]-dd/mm/yyyy@hh:mm[AM/PM]

cmdline.subscribeinvactive=Primary and secondary schedules must have an active time range in the format: dd/mm/yyyy@hh:mm[AM/PM]-dd/mm/yyyy@hh:mm[AM/PM]

cmdline.subscribestartbeforecurrent=Error: The active start time for schedules(primary, secondary, update, verify/repair) must be after the current time

cmdline.subscribeendbeforecurrent=Error: The active end time for schedules(primary, secondary, update, verify/repair) must be after the current time

cmdline.allowmachineorgroupdn=Sourcing users from the transmitter; only machine and group distinguished names are allowed:

cmdline.plugin.basedncantbenull=Plug-in directory service base DN must be specified

cmdline.plugin.hostcantbenull=Plug-in directory service host name must be specified

cmdline.plugin.poolsizemust=Plug-in directory service connection pool size must be specified

cmdline.plugin.invpoolsize=Invalid poolsize:

cmdline.plugin.invpoolsizerange=Invalid poolsize. Please enter a value between 1 and 100:

cmdline.plugin.lastgoodhostexptimemins=Invalid expiry time specified:

cmdline.plugin.invhostport=Invalid host and/or port:

cmdline.plugin.publishrequired=You must specify the -publish <publish URL> command along with -setpluginparam command.

cmdline.plugin.invalidarg=Invalid argument passed to setpluginparam:

cmdline.plugin.cannotsetbasedn=Cannot set basedn if autodiscovery is used for AD

cmdline.plugin.cannotsethost=Cannot set host if autodiscovery is used for AD

cmdline.plugin.invalidsslflag=Invalid value for usessl. Can be true/false:

cmdline.plugin.invalidauthmethod=Invalid value for authentication method. Can be simple/kerberos:

cmdline.plugin.emptyvalue=Empty value found for plugin parameter:

cmdline.string=command line

cmdline.settxadminaccess=User name and password set for accessing the plug-in transmitter for user and user group listings

cmdline.containers.concreated=Child containers created for:

cmdline.containers.subcreated=Policies created for:

cmdline.containers.conexist=Child containers exist for:

cmdline.containers.subexist=Policies exist for:

cmdline.containers.replicate=Policy Managers running on a domain different from the domain that stores policies will not be usable until replication to that domain has occurred.  The replication delay is particularly visible across sites.  If necessary, you may force immediate replication through Active Directory.

cmdline.invtargettype=ERROR: Invalid target type:

cmdline.usednandtype=Use -dn <target DN> <type> command format to skip resolution of target.

cmdline.invcolmode=Either centralized or distributed must be specified after the -colmode argument

cmdline.acl.missingargs=Invalid arguments

cmdline.config.preview=Previewing Subscription Config property :

cmdline.config.old=Old value:

cmdline.config.new=New value:

cmdline.config.success=Restart Policy Manager for the new Subscription Config properties to take effect. Successfully set Subscription Config property:

cmdline.emptycommand.warning=System warning. No command is executed.

cmdline.pkgurlsplchar=Package contains one or more special character which are not supported by Policy Manager. A URL cannot contain the following special characters: *, =, and +.

cmdline.invpackurl=ERROR: Invalid Package URL is provided:

cmdline.provideurl=ERROR: Provide a package URL to list associated targets



#-------------------------

# LDAP Query Collection

#-------------------------



#-------------------------

# commands

#-------------------------

cmdline.ldapqc.config.opt0=-ldapqc -config  <key> <value>

cmdline.ldapqc.config.descr=Sets Subscription Config properties

cmdline.ldapqc.create.opt0=-ldapqc -create -cname "<collection_name>" -query "<ldap_query>" [-searchBase "<dn>"][-schedule "<date_time_range_frequency>"] [-filter {usersonly|machinesonly}]

cmdline.ldapqc.create.descr=Creates an LDAP query collection with the specified collection name and LDAP query.

cmdline.ldapqc.modify.opt0=-ldapqc -modify -cname "<collection_name>" [-query "<ldap_query>"] [-searchBase "<dn>"][-schedule "<date_time_range_frequency>"] -filter {usersonly|machinesonly}

cmdline.ldapqc.modify.descr=Modifies the specified LDAP query collection with the given changes.

cmdline.ldapqc.preview.opt0=-ldapqc -preview -query "<ldap_query>" [-searchBase "<dn>"] [-filter {usersonly|machinesonly}]

cmdline.ldapqc.preview.opt1=-ldapqc -preview -cname "<collection_name>"

cmdline.ldapqc.preview.descr=Previews the results for an existing or new LDAP query collection.

cmdline.ldapqc.list.opt0=-ldapqc -list -cname "<collection_name>"

cmdline.ldapqc.list.opt1=-ldapqc -list -all

cmdline.ldapqc.list.descr=Displays information about the specified LDAP query collection. Using the -all option displays all the LDAP query collections.

cmdline.ldapqc.delete.opt0=-ldapqc -delete -cname "<collection_name>"

cmdline.ldapqc.delete.opt1=-ldapqc -delete -all

cmdline.ldapqc.delete.descr=Deletes the specified LDAP query collection. Using the -all option deletes all the LDAP query collections that you have permissions to delete.

cmdline.ldapqc.refresh.opt0=-ldapqc -refresh -cname "<collection_name>"

cmdline.ldapqc.refresh.descr=Update the results of the specified LDAP query collection by running the query.

cmdline.ldapqc.removetask.opt0=-ldapqc -removetask -cname "<collection_name>"

cmdline.ldapqc.removetask.opt1=-ldapqc -removetask -all

cmdline.ldapqc.removetask.descr=removes the task of the specified query collection.using -all removes the tasks of all the collection

cmdline.ldapqc.addtask.opt0=-ldapqc -addtask -cname "<collection_name>"

cmdline.ldapqc.addtask.opt1=-ldapqc -addtask -all

cmdline.ldapqc.addtask.descr=adds the task of the specified query collection.using -all adds the tasks of all the collection



#-------------------------

# Messages

#-------------------------

cmdline.ldapqc.collnnamecannotbenull=ERROR: The LDAP query collection name cannot be null. Please provide a name.

cmdline.ldapqc.invalidcollnname=ERROR: Invalid LDAP query collection name.

cmdline.ldapqc.collnnamealreadyexists=ERROR: The LDAP query collection name is not unique. Please provide a name that has not been used.

cmdline.ldapqc.querymissing=ERROR: The query is missing. Please include a query.

cmdline.ldapqc.querycannotbenull=ERROR: The argument for the -query option is missing. Please provide a valid LDAP query after the -query option.

cmdline.ldapqc.invalidldapquery=ERROR: Invalid LDAP query. Please provide a valid LDAP query.

cmdline.ldapqc.searchBasecannotbenull=ERROR: The argument for the -searchbase option is missing. Please provide a valid search base after the -searchBase option.

cmdline.ldapqc.invalidsearchbase=ERROR: Invalid search base. Please provide a valid search base.

cmdline.ldapqc.searchbasenotfound=ERROR: The search base is not found. Please verify the search base.

cmdline.ldapqc.schedulecannotbenull=ERROR: The argument for the -schedule option is missing. Please provide a valid schedule after the -schedule option.

cmdline.ldapqc.invalidschedule=ERROR: Invalid schedule string.

cmdline.ldapqc.invalidsearchbase=ERROR: Invalid Search Base.

cmdline.ldapqc.filtercannotbenull=ERROR: The argument for the -filter option is missing. Please provide a valid filter after the -filter option.

cmdline.ldapqc.invalidfilter=ERROR: Invalid filter. Please provide a valid filter.

cmdline.ldapqc.invalidargument=ERROR: The argument for any option (-cname, -query, and so on) cannot be any valid command. Please check the arguments that you provided.

cmdline.ldapqc.missingarguments=ERROR: The argument for the -modify command is missing. Please provide any of the options( -query, -schedule,-searchbase,-filter) to modify its value.

cmdline.ldapqc.insufficientprivillege=Only primary administrators and owners (administrators who created the collections) can modify, preview, delete, and refresh collections.

cmdline.ldapqc.nowritepermission=ERROR: Permission denied. Please check whether you have write permission on the LDAP Query Collection container.

cmdline.ldapqc.dbconnectionfailed=ERROR: Unable to obtain database connection. Please check whether the database server is running.

cmdline.ldapqc.morethanoneusersfound=More than one user is found with the same name but with different DNs. Please log in with the specified DN.

cmdline.ldapqc.ldapquerycollectionsucceed=The LDAP query collection has been created successfully.

cmdline.ldapqc.ldapquerycollectionfailed=Creation of the LDAP query collection was not successful. Please check the log files for more details.

cmdline.ldapqc.previewresults=Preview Results

cmdline.ldapqc.deletionresults=The LDAP query collection was deleted successfully.

cmdline.ldapqc.listallresults=List of all the LDAP query collections

cmdline.ldapqc.listresults=LDAP query collection details

cmdline.ldapqc.noobjectsfound=No LDAP query collections found.

cmdline.ldapqc.givenobjectnotfound=The given LDAP query collection does not exist.

cmdline.ldapqc.givenobjectmodified=The given LDAP query collection was modified successfully.

cmdline.ldapqc.givenobjectnotmodified=Modifying the collection was not successful.

cmdline.ldapqc.queryobjectnotfound=There is no query object in the given name.

cmdline.ldapqc.nomachingobjects=No matching objects were found for the LDAP query.

cmdline.ldapqc.operationrestricted=Only primary administrators and owners (administrators who created the collections) can modify, preview, delete, and refresh collections.

cmdline.ldapqc.noofmatchingobjects=The total number of matching collections

cmdline.ldapqc.noofdeletedobjects=The total number of deleted collections

cmdline.ldapqc.permissiondenied=Permission denied for the currently logged in database user. Use the administrative user account to configue database

cmdline.ldapqc.commandsucceed=The command executed successfully

cmdline.ldapqc.commandfailed=The command execution was not successful.

cmdline.ldapqc.reportcenterNotConfigured= ERROR: The Report Center is not running or database is not configured. Please configure the Report Center.

cmdline.ldapqc.querysearchbase=Not Set

cmdline.ldapqc.queryschedule=Not Set

cmdline.ldapqc.datetimelastrun=Not Yet run

cmdline.ldapqc.datetimenextrun=Not Sheduled

cmdline.ldapqc.querynamehdr=Collection name

cmdline.ldapqc.querysyntaxhdr=LDAP query

cmdline.ldapqc.queryfilterhdr=Filter

cmdline.ldapqc.querysearchbasehdr=Search base

cmdline.ldapqc.queryschedulehdr=Schedule

cmdline.ldapqc.createdbyhdr=Created by

cmdline.ldapqc.datetimelastrunhdr=Last run

cmdline.ldapqc.datetimenextrunhdr=Next run

cmdline.ldapqc.previewresults=Preview results

cmdline.ldapqc.notasksfound=No tasks found

cmdline.ldapqc.noofdeletedtasks=The total number of deleted tasks

cmdline.all_endpoints=All Endpoints